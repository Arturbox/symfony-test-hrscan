version: '3.7'

networks:
  rest:
    driver: ${NETWORKS_DRIVER}
    ipam:
      config:
        - subnet: ${NETWORKS_SUBNET}

volumes:
  postgresdata:
      name: postgresdata
      external: true
  postgresdatatest:
    name: postgresdatatest
    external: true

services:
  php:
    build:
      context: php
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
      - FAKETIME=${PHP_FPM_FAKETIME}
    networks:
      - rest
  worker:
    build:
     context: ./worker
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./worker/supervisord.d:/etc/supervisord.d
    depends_on:
      - php
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - rest
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      - "~/etc/timezone:/etc/timezone:ro"
      - "~/etc/localtime:/etc/localtime:ro"
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php
    networks:
      - rest
  postgres:
    build: ./postgres
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - rest
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 1s
      timeout: 5s
      retries: 5
  postgres-test:
    build: ./postgres
    volumes:
      - postgresdatatest:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_TEST_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_TEST_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - rest
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 1s
      timeout: 5s
      retries: 5

